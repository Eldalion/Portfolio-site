{"version":3,"sources":["Review.js","Restaurant.js","RestaurantContainer.js","MapContainer.js","index.js"],"names":["Review","text","author","Restaurant","name","rating","id","map","geometry","lowerRange","upperRange","console","log","location","lat","lng","somevariable","picture","useState","reviewData","setReviewData","reviews","setReviews","reviewFetched","setReviewFetched","reviewToggle","setReviewToggle","reviewFormToggle","setReviewFormToggle","formData","setFormData","fetchReviews","a","Promise","resolve","reject","service","window","google","maps","places","PlacesService","request","placeId","fields","getDetails","place","status","PlacesServiceStatus","OK","handleChange","event","target","value","className","onClick","then","catch","error","photos","src","alt","onSubmit","preventDefault","prevState","author_name","htmlFor","type","placeholder","onChange","required","cols","rows","review","index","key","RestaurantContainer","placesData","setLowerRange","setUpperRange","action","place_id","libraries","mapContainerStyle","height","width","MapContainer","useLoadScript","googleMapsApiKey","isLoaded","loadError","mapState","setMapState","setPlaces","currentPosition","setCurrentPosition","markers","setMarkers","selected","setSelected","latitude","setLatitude","longitude","setLongitude","restaurantFormModalToggle","setRestaurantFormModalToggle","onChangeRestaurantForm","success","position","coords","useEffect","navigator","geolocation","getCurrentPosition","LatLng","radius","nearbySearch","results","message","zoom","center","latLng","time","Date","onLoad","marker","toISOString","icon","url","scaledSize","Size","origin","Point","anchor","onCloseClick","step","min","max","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.53cc8a21.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Review = ({text, author}) => {\r\n\r\n    return (\r\n        <>\r\n            <p>\r\n                {text}<br/>\r\n                <span>- {author}</span>\r\n            </p>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Review;","import React, { useState } from 'react';\r\nimport Review from './Review.js'; \r\n\r\nconst Restaurant = ({name, rating, id, map, geometry,lowerRange,upperRange}) => {\r\n\r\n    /* console.log(lowerRange,upperRange); */\r\n\r\n\r\n    console.log('Geometry Lat ',geometry.location.lat(), '|| Geometry Lng ',geometry.location.lng());\r\n\r\n    let somevariable = geometry.location.lat;\r\n\r\n    \r\n    let picture = `https://maps.googleapis.com/maps/api/streetview?size=600x300&location=${somevariable},${geometry.location.lng()}&heading=151.78&pitch=-0.76&key=AIzaSyCJR69amzyTagk31JzXBFEs3XSlcoVYPCw`;\r\n\r\n    /* console.log(picture);  */\r\n\r\n    let picture2 = `https://maps.googleapis.com/maps/api/streetview/metadata?size=600x300&location=${geometry.location.lat},${geometry.location.lng}heading=151.78&pitch=-0.76&key=AIzaSyCJR69amzyTagk31JzXBFEs3XSlcoVYPCw`;\r\n\r\n    /* console.log('2.',picture2); */\r\n\r\n\r\n    const [ reviewData, setReviewData] = useState({}); // The whole fetched data object\r\n    const [ reviews, setReviews] = useState([]); // Reviews part of data object\r\n    const [ reviewFetched, setReviewFetched] = useState(false);\r\n\r\n    const [ reviewToggle, setReviewToggle] = useState(false);\r\n    \r\n\r\n    const [ reviewFormToggle, setReviewFormToggle] = useState(false);\r\n    const [formData, setFormData] = useState({\r\n\t\tauthor: \"\",\r\n\t\ttext: \"\"\r\n    }); \r\n    \r\n    const fetchReviews = async (map, id) => {\r\n        \r\n        return new Promise(( resolve, reject )=> {\r\n            \r\n            const service = new window.google.maps.places.PlacesService(map);\r\n             \r\n            const request = {\r\n                placeId: id,\r\n                fields: ['reviews','name','photo']\r\n            };\r\n\r\n            service.getDetails(request, callback);\r\n            function callback(place, status) {\r\n                if (status === window.google.maps.places.PlacesServiceStatus.OK) {\r\n                    console.log('Review fetch success ', place);  \r\n                } else reject(console.log('Review fetch fail ', place, status));\r\n                    \r\n                resolve(place);    \r\n            };\r\n        })\r\n    }\r\n\r\n    const handleClick = () => {\r\n        \r\n\r\n        console.log('reviewToggle state:', reviewToggle);\r\n        if (reviewToggle === false ) {\r\n\r\n            \r\n            if ( reviewFetched === false ) {\r\n                \r\n                setReviewToggle(true);\r\n                fetchReviews( map, id ).then((value)=> {\r\n                    setReviewData(value);\r\n                    setReviews(value.reviews);\r\n                })\r\n                .catch( error =>  console.log('CATCH ERROR',error) );\r\n                \r\n                setReviewFetched(true);\r\n                \r\n            } else {\r\n                setReviewToggle(true);\r\n            }\r\n            \r\n        } else {\r\n            setReviewToggle(false)\r\n        }\r\n    }\r\n\r\n    const handleCloseModal = () => {\r\n        setReviewToggle( false );\r\n    }\r\n\r\n    const handleReviewButton = () => {\r\n\r\n        if ( reviewFormToggle === false ) {\r\n            setReviewFormToggle(true);\r\n        } else {\r\n            setReviewFormToggle(false);\r\n        }\r\n    }\r\n\r\n    const handleFormSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        setReviews(prevState => [\r\n            ...prevState,{\r\n                author_name:formData.author,\r\n                text:formData.text\r\n            }\r\n        ]);\r\n\r\n        setFormData({\r\n            author: \"\",\r\n            text: \"\"\r\n        });\r\n\r\n    }\r\n\r\n    const handleChange = (event) => {\r\n        setFormData({\r\n            ...formData,\r\n            [event.target.name]: event.target.value\r\n        });\r\n    };\r\n\r\n    \r\n\r\n    if ( rating < lowerRange || rating > upperRange ) {\r\n        return null;\r\n    } else {\r\n        return (\r\n\r\n            <div className=\"restaurant\" >\r\n                <h2>{name}</h2>\r\n                { rating ? ( <h4>Rating: {rating}</h4> ) : ( <h4>Rating not available</h4> ) } \r\n                <button onClick={handleClick}>Show Details</button>\r\n                <div className={reviewToggle ? ( 'modal-overlay' ) : ('')} >\r\n                    <div className={reviewToggle ? ( 'modal' ) : ('modal modal-hidden')}>\r\n    \r\n                        <span className=\"modal-close\" onClick={handleCloseModal}>X</span>\r\n                        { reviewData.photos ? ( <img src={picture} alt=\"restaurant\" /> ) : ('This restaurant does not have photos yet.')}\r\n                        { reviewData.reviews ? (\r\n                            <>\r\n                                <h2>Restaurant Review</h2>\r\n                                <button onClick={handleReviewButton}>Write a review</button>\r\n                                <form className={reviewFormToggle ? ( 'review-form' ) : ('review-form review-form-hidden')} onSubmit={handleFormSubmit}>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"\">Name </label>\r\n                                        <input \r\n                                            type=\"text\" \r\n                                            placeholder=\"Type your name here\" \r\n                                            name=\"author\" \r\n                                            value={formData.author}\r\n                                            onChange={handleChange} \r\n                                            required\r\n                                        /><br/>\r\n                                    </div>\r\n                                        \r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"\">Review </label>\r\n                                        <textarea \r\n                                            cols=\"30\" \r\n                                            rows=\"10\" \r\n                                            placeholder=\"Type your review here\" \r\n                                            name=\"text\" \r\n                                            value={formData.text}\r\n                                            onChange={handleChange}\r\n                                            required\r\n                                        />\r\n                                    </div>\r\n                                    <input type='submit' className=\"form-submit-button\" value=\"Submit\"/>\r\n                                </form>\r\n    \r\n                                {reviews.map((review, index) => (\r\n                                                    \r\n                                    <Review \r\n                                        key={index} \r\n                                        text={review.text} \r\n                                        author={review.author_name} \r\n                                    />  \r\n                                ))}\r\n    \r\n                            </>\r\n                        ) : ('')}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );  \r\n    }\r\n\r\n     \r\n}\r\n\r\nexport default Restaurant;","import React, { useState } from 'react';\r\nimport Restaurant from './Restaurant.js';\r\n\r\nconst RestaurantContainer = ({placesData, map}) => {\r\n    \r\n    const [ lowerRange, setLowerRange] = useState(0);\r\n    const [ upperRange, setUpperRange] = useState(5);\r\n\r\n    const selectHandleChangeLower = (event) => {\r\n        setLowerRange( event.target.value)\r\n    }\r\n\r\n    const selectHandleChangeUpper = (event) => {\r\n        setUpperRange( event.target.value)\r\n    }\r\n\r\n    /* console.log(placesData); */\r\n\r\n    return (\r\n        <div className=\"restaurant-container\">\r\n\r\n            <div className=\"range-slider\">\r\n                <form action=\"\">\r\n                    <h2>Rating filter tool</h2>\r\n                    <label htmlFor=\"lowerRange\">Lower limit</label>\r\n\r\n                    <select name=\"lowerRange\" id=\"low-limit\" value={lowerRange} onChange={selectHandleChangeLower}>\r\n                        <option value=\"0\">0 stars</option>\r\n                        <option value=\"1\">1 stars</option>\r\n                        <option value=\"2\">2 stars</option>\r\n                        <option value=\"3\">3 stars</option>\r\n                        <option value=\"4\">4 stars</option>\r\n                        <option value=\"5\">5 stars</option> \r\n                    </select>\r\n                    <br/>\r\n                    <label htmlFor=\"upperRange\">Upper limit</label>\r\n\r\n                    <select name=\"upperRange\" id=\"up-limit\"  value={upperRange} onChange={selectHandleChangeUpper}>\r\n                        {/* <option value=\"0\">0 stars</option> */}\r\n                        {lowerRange <= 1 && (<option value=\"1\">1 stars</option>)}\r\n                        {lowerRange <= 2 && (<option value=\"2\">2 stars</option>)}\r\n                        {lowerRange <= 3 && (<option value=\"3\">3 stars</option>)}\r\n                        {lowerRange <= 4 && (<option value=\"4\">4 stars</option>)}\r\n                        {lowerRange <= 5 && (<option value=\"5\">5 stars</option>)}\r\n                    </select>\r\n                </form>\r\n            </div>\r\n\r\n            { (placesData && map) ? (\r\n\t\t\t\tplacesData.map((place, index) => (\r\n                    \r\n                    <Restaurant \r\n                        key={index} \r\n                        name={place.name} \r\n                        rating={place.rating} \r\n                        id={place.place_id} \r\n                        map={map} \r\n                        geometry={place.geometry}\r\n                        lowerRange={lowerRange}\r\n                        upperRange={upperRange}\r\n                    />  \r\n                ))\r\n\t\t\t) : ( \"Loading Restaurant List\" ) } \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RestaurantContainer;","import React, { useState, useEffect } from \"react\";\r\nimport { GoogleMap, Marker, useLoadScript, InfoWindow } from \"@react-google-maps/api\";\r\nimport RestaurantContainer from \"./RestaurantContainer.js\";\r\n\r\nconst libraries = [\"places\",\"streetview\"];\r\nconst mapContainerStyle = {        \r\n\theight: \"100vh\",\r\n\twidth: \"100%\"\r\n};\r\n\r\nconst MapContainer = () => {\r\n\r\n\tconst { isLoaded, loadError } = useLoadScript({\r\n\t\tgoogleMapsApiKey : \"AIzaSyCJR69amzyTagk31JzXBFEs3XSlcoVYPCw\",\r\n\t\tlibraries\r\n\t});\r\n\r\n\tconst [ mapState, setMapState ] = useState(null);\r\n\tconst [ places, setPlaces ] = useState(null);\r\n\tconst [ currentPosition, setCurrentPosition ] = useState({});\r\n\tconst [ markers, setMarkers ] = useState([]);\r\n\tconst [ selected, setSelected ] = useState(null);\r\n\r\n\tconst [ latitude , setLatitude  ] = useState(0);\r\n\tconst [ longitude, setLongitude ] = useState(0);\r\n\r\n\tconst [ restaurantFormModalToggle, setRestaurantFormModalToggle] = useState(false);\r\n\tconst [formData, setFormData] = useState({\r\n\t\tname: \"\",\r\n\t\trating: \"\",\r\n\t\tplace_id: \"\",\r\n\t\tgeometry: {\r\n\t\t\tlocation: {\r\n\t\t\t\tlat: \"\",\r\n\t\t\t\tlng: \"\",\r\n\t\t\t}\r\n\t\t}\r\n\t}); \r\n\t\r\n\t/* TEMP HELPER FUNCTIONS */\r\n\tconst tempLat = () => {\r\n\t\treturn 12;\r\n\t}\r\n\r\n\tconst tempLng = () => {\r\n\t\treturn 12;\r\n\t}\r\n\r\n\t/* TEMP HELPER FUNCTIONS */\r\n\r\n\tconst onMapClick = (event) => {\r\n\r\n\t\tsetMarkers( prevState => [\r\n\t\t\t...prevState, {\r\n\t\t\t\tlat: event.latLng.lat(),\r\n\t\t\t\tlng: event.latLng.lng(),\r\n\t\t\t\ttime: new Date()\r\n\t\t\t}\r\n\t\t]);\r\n\r\n\t\tsetLatitude(event.latLng.lat());\r\n\t\tsetLongitude(event.latLng.lng());\r\n\r\n\t\tsetRestaurantFormModalToggle(true); // Show form for adding a restaurant\r\n\t};\r\n\r\n\tconst onSubmitRestaurantForm = (event) => {\r\n        event.preventDefault();\r\n\r\n        setPlaces( prevState => [\r\n\t\t\t...prevState, {\r\n\t\t\t\tname:formData.name,\r\n\t\t\t\trating:formData.rating,\r\n\t\t\t\tplace_id:\"asdf2qawd654ad654asd6a5s4d\",\r\n\t\t\t\tgeometry: {\r\n\t\t\t\t\tlocation: {\r\n\t\t\t\t\t\tlat: latitude,\r\n\t\t\t\t\t\tlng: longitude\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t]);\r\n\r\n        setFormData({\r\n\t\t\tname: \"\",\r\n\t\t\trating: 0\r\n\t\t});\r\n\t\t\r\n\t\tsetRestaurantFormModalToggle(false); // Hide form for adding a restaurant\r\n\t}\r\n\r\n\tconst onChangeRestaurantForm = (event) => {\r\n        setFormData({\r\n            ...formData,\r\n            [event.target.name]: event.target.value\r\n        });\r\n\t};\r\n\r\n\tconst handleRestaurantFormClose = () => {\r\n        setRestaurantFormModalToggle(false);\r\n\t};\r\n\t\r\n\tconst onMapLoad = ( (map) => {\r\n\t\tsetMapState(map);\r\n\t}); \r\n\r\n\tconst success = (position) => {\r\n\t\tconst currentPosition = {\r\n\t\t\tlat: position.coords.latitude,\r\n\t\t\tlng: position.coords.longitude\r\n\t\t}\r\n\t\tsetCurrentPosition(currentPosition);\r\n\t};\r\n\r\n\tconst fetchPlaces = (map) => {\r\n\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\t\r\n\t\t\t\tconst service = new window.google.maps.places.PlacesService(map);\r\n\t\t\t\tconst place = new window.google.maps.LatLng( currentPosition.lat,currentPosition.lng); \r\n\r\n\t\t\t\tconst request = {\r\n\t\t\t\t\tlocation: place,\r\n\t\t\t\t\tradius: '500',\r\n\t\t\t\t\ttype: ['restaurant']\r\n\t\t\t\t};\r\n\r\n\t\t\t\tservice.nearbySearch(request, (results, status) => {\r\n\t\t\t\t\r\n\t\t\t\t\tif (status === window.google.maps.places.PlacesServiceStatus.OK) {\r\n\t\t\t\t\t\tconsole.log('FetchPlaces - Data fetch success');\t\r\n\t\t\t\t\t} else reject(console.log('FetchPlaces - Data fetch fail'));\r\n\r\n\t\t\t\t\tresolve(results);\t\r\n\t\t\t\t});\r\n\t\t})\t\t\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tnavigator.geolocation.getCurrentPosition(success);\r\n\t},[]); \r\n\r\n\tuseEffect( () => {\r\n\r\n\t\tfetchPlaces(mapState)\r\n\t\t.then(value => {\r\n\t\t\tsetPlaces(value); \r\n\t\t})\r\n\t\t.catch( error =>  console.log('CATCH ERROR:',error.message) );\r\n\t\t\r\n\t},[mapState]); \r\n\r\n\tif ( loadError ) return \"Error loading map\";\r\n\tif ( !isLoaded ) return \"Loading map\";\r\n\r\n\treturn (\r\n\t\t<div className=\"main-container\">\r\n\t\t\t<GoogleMap\r\n\t\t\t\tmapContainerStyle={mapContainerStyle}\r\n\t\t\t\tzoom={14}\r\n\t\t\t\tcenter={currentPosition}\t\r\n\t\t\t\tonClick={ onMapClick }\r\n\t\t\t\tonLoad = { onMapLoad }\r\n\t\t\t>\r\n\t\t\t\t<Marker position ={ currentPosition }/>\r\n\t\t\t\t<InfoWindow position={currentPosition} >\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<h3>You are here</h3>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</InfoWindow>\r\n\t\t\t\t\r\n\t\t\t\t{ markers.map( (marker) => (\r\n\t\t\t\t\t<Marker \r\n\t\t\t\t\t\tkey ={ marker.time.toISOString() }\r\n\t\t\t\t\t\tposition ={ { lat:marker.lat, lng: marker.lng} }\r\n\t\t\t\t\t\ticon = {{\r\n\t\t\t\t\t\t\turl: \"./img/food-icon.jpg\",\r\n\t\t\t\t\t\t\tscaledSize: new window.google.maps.Size(55, 55),\r\n\t\t\t\t\t\t\torigin: new window.google.maps.Point(0, 0),\r\n\t\t\t\t\t\t\tanchor: new window.google.maps.Point(15, 15),\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tonClick={ () => {\r\n\t\t\t\t\t\t\tsetSelected(marker);\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t/>\r\n\t\t\t\t))}\r\n\r\n\t\t\t\t{ \tselected ? (\r\n\t\t\t\t\t\t<InfoWindow\r\n\t\t\t\t\t\t\tposition={{ lat: selected.lat, lng: selected.lng}}\r\n\t\t\t\t\t\t\tonCloseClick= { () => {\r\n\t\t\t\t\t\t\t\tsetSelected(null);\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<h2>Restaurant added</h2>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t</InfoWindow>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t) : null \r\n\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t</GoogleMap>\r\n\t\t\t{ (places && mapState) ? (\r\n\t\t\t\t<RestaurantContainer placesData={places} map={mapState}/>\r\n\t\t\t) : ( \"Loading Restaurant List\" ) } \r\n\r\n\t\t\t<div className={restaurantFormModalToggle ? ( 'restaurant-form-modal-overlay' ) : ('restaurant-form-modal-overlay restaurant-form-hidden')}>\r\n\t\t\t\t<form onSubmit={onSubmitRestaurantForm} className={'restaurant-form'}>\r\n\t\t\t\t\t<span className=\"modal-close\" onClick={handleRestaurantFormClose}>X</span>\r\n\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t<label htmlFor=\"\">Restaurant name </label>\r\n\t\t\t\t\t\t<input \r\n\t\t\t\t\t\t\ttype=\"text\" \r\n\t\t\t\t\t\t\tplaceholder=\"Type name of the restaurant here\" \r\n\t\t\t\t\t\t\tname=\"name\" \r\n\t\t\t\t\t\t\tvalue={formData.name}\r\n\t\t\t\t\t\t\tonChange={onChangeRestaurantForm} \r\n\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t/><br/>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t<label htmlFor=\"\">Restaurant rating </label>\r\n\t\t\t\t\t\t<input \r\n\t\t\t\t\t\t\ttype=\"number\" \r\n\t\t\t\t\t\t\tplaceholder=\"Click rating of the restaurant here\" \r\n\t\t\t\t\t\t\tname=\"rating\" \r\n\t\t\t\t\t\t\tvalue={formData.rating}\r\n\t\t\t\t\t\t\tonChange={onChangeRestaurantForm} \r\n\t\t\t\t\t\t\tstep=\"0.1\"\r\n\t\t\t\t\t\t\tmin=\"0.0\"\r\n\t\t\t\t\t\t\tmax=\"5.0\"\r\n\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t/><br/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<input type='submit' className=\"form-submit-button\" value=\"Submit\"/>\r\n\t\t\t\t</form>\t\r\n\t\t\t</div>\t\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default MapContainer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport MapContainer from './MapContainer';\nimport './App.css';\n\nReactDOM.render(<MapContainer />,document.getElementById('root'));\n\n\n"],"sourceRoot":""}